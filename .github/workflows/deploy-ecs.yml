name: Build and Deploy

on:
  push:
    branches: feature/ecs
  workflow_dispatch:
    inputs:
      release:
        description: "Enter the release number."
        type: string
        required: true

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
      ECR_REGISTRY: ${{secrets.ECR_REGISTRY}}
      ECR_REPOSITORY: ${{secrets.ECR_REPOSITORY}}
      DOCKER_COMPOSE_FILE: "compose.yaml"
      GH_TOKEN: ${{ github.token }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.DFS_INFRA_PUBLIC_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.DFS_INFRA_PUBLIC_AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-2

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
        with:
          mask-password: True

      - name: Build Docker image
        run: |
          docker compose -f ${{ env.DOCKER_COMPOSE_FILE }} build
          docker tag forkor:latest ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:${{ github.run_number }}

      - name: Push Docker image to ECR
        run: |
          docker push ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:${{ github.run_number }}

  deploy:
    needs: [build]
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: terraform/

    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.DFS_INFRA_PUBLIC_AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.DFS_INFRA_PUBLIC_AWS_SECRET_ACCESS_KEY }}
      AWS_REGION: us-west-2
      GH_TOKEN: ${{ github.token }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set release number variable
        id: set_release
        run: echo "RELEASE=${{ github.run_number || inputs.release }}" >> $GITHUB_ENV

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: '1.5.7'

      - name: Terraform Format
        id: fmt
        run: terraform fmt -check

      - name: Terraform Init
        id: init
        run: |
          eval `ssh-agent -s`
          ssh-add - <<< '${{ secrets.ECS_MODULE_DEPLOY_KEY }}'
          terraform init -lock=false 

      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color

      - name: Terraform Apply
        run: terraform apply -var deployment_image_tag=${{ env.RELEASE }} -auto-approve -input=false