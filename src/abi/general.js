const botAuthAbi = [{ inputs: [{ internalType: "address", name: "_caller", type: "address" }], name: "addCaller", outputs: [], stateMutability: "nonpayable", type: "function" }];
const dfsRegistryAbi = [{ inputs: [{ internalType: "bytes4", name: "_id", type: "bytes4" }], name: "getAddr", outputs: [{ internalType: "address", name: "", type: "address" }], stateMutability: "view", type: "function" }];
const iProxyERC20Abi = [{ inputs: [], name: "target", outputs: [{ internalType: "address", name: "", type: "address" }], stateMutability: "view", type: "function" }, { inputs: [], name: "tokenState", outputs: [{ internalType: "address", name: "", type: "address" }], stateMutability: "view", type: "function" }];
const erc20Abi = [{ inputs: [], name: "decimals", outputs: [{ internalType: "uint8", name: "", type: "uint8" }], stateMutability: "view", type: "function" }, { inputs: [{ internalType: "address", name: "", type: "address" }], name: "balanceOf", outputs: [{ internalType: "uint256", name: "", type: "uint256" }], stateMutability: "view", type: "function" }, { constant: false, inputs: [{ name: "_spender", type: "address" }, { name: "_value", type: "uint256" }], name: "approve", outputs: [{ name: "", type: "bool" }], payable: false, stateMutability: "nonpayable", type: "function" }, { constant: true, inputs: [{ name: "_owner", type: "address" }, { name: "_spender", type: "address" }], name: "allowance", outputs: [{ name: "", type: "uint256" }], payable: false, stateMutability: "view", type: "function" }];
const proxyRegistryAbi = [{ constant: true, inputs: [{ name: "", type: "address" }], name: "proxies", outputs: [{ name: "", type: "address" }], payable: false, stateMutability: "view", type: "function" }, { constant: false, inputs: [{ name: "owner", type: "address" }], name: "build", outputs: [{ name: "proxy", type: "address" }], payable: false, stateMutability: "nonpayable", type: "function" }];
const proxyAbi = [{ constant: false, inputs: [{ name: "_target", type: "address" }, { name: "_data", type: "bytes" }], name: "execute", outputs: [{ name: "response", type: "bytes32" }], payable: true, stateMutability: "payable", type: "function" }, { constant: true, inputs: [], name: "owner", outputs: [{ name: "", type: "address" }], payable: false, stateMutability: "view", type: "function" }];
const subProxyAbi = [{ inputs: [], name: "NonContractCall", type: "error" }, { inputs: [], name: "SenderNotAdmin", type: "error" }, { inputs: [], name: "SenderNotOwner", type: "error" }, { inputs: [], name: "EXECUTE_SELECTOR", outputs: [{ internalType: "bytes4", name: "", type: "bytes4" }], stateMutability: "view", type: "function" }, { inputs: [{ internalType: "uint256", name: "_subId", type: "uint256" }], name: "activateSub", outputs: [], stateMutability: "nonpayable", type: "function" }, { inputs: [], name: "adminVault", outputs: [{ internalType: "contract AdminVault", name: "", type: "address" }], stateMutability: "view", type: "function" }, { inputs: [{ internalType: "uint256", name: "_subId", type: "uint256" }], name: "deactivateSub", outputs: [], stateMutability: "nonpayable", type: "function" }, { inputs: [{ internalType: "address", name: "_contractAddr", type: "address" }], name: "givePermission", outputs: [], stateMutability: "nonpayable", type: "function" }, { inputs: [], name: "kill", outputs: [], stateMutability: "nonpayable", type: "function" }, { inputs: [], name: "registry", outputs: [{ internalType: "contract DFSRegistry", name: "", type: "address" }], stateMutability: "view", type: "function" }, { inputs: [{ internalType: "address", name: "_contractAddr", type: "address" }], name: "removePermission", outputs: [], stateMutability: "nonpayable", type: "function" }, { inputs: [{ components: [{ internalType: "uint64", name: "strategyOrBundleId", type: "uint64" }, { internalType: "bool", name: "isBundle", type: "bool" }, { internalType: "bytes[]", name: "triggerData", type: "bytes[]" }, { internalType: "bytes32[]", name: "subData", type: "bytes32[]" }], internalType: "struct StrategyModel.StrategySub", name: "_sub", type: "tuple" }], name: "subscribeToStrategy", outputs: [], stateMutability: "nonpayable", type: "function" }, { inputs: [{ internalType: "uint256", name: "_subId", type: "uint256" }, { components: [{ internalType: "uint64", name: "strategyOrBundleId", type: "uint64" }, { internalType: "bool", name: "isBundle", type: "bool" }, { internalType: "bytes[]", name: "triggerData", type: "bytes[]" }, { internalType: "bytes32[]", name: "subData", type: "bytes32[]" }], internalType: "struct StrategyModel.StrategySub", name: "_sub", type: "tuple" }], name: "updateAndActivateSub", outputs: [], stateMutability: "nonpayable", type: "function" }, { inputs: [{ internalType: "uint256", name: "_subId", type: "uint256" }, { components: [{ internalType: "uint64", name: "strategyOrBundleId", type: "uint64" }, { internalType: "bool", name: "isBundle", type: "bool" }, { internalType: "bytes[]", name: "triggerData", type: "bytes[]" }, { internalType: "bytes32[]", name: "subData", type: "bytes32[]" }], internalType: "struct StrategyModel.StrategySub", name: "_sub", type: "tuple" }], name: "updateSubData", outputs: [], stateMutability: "nonpayable", type: "function" }, { inputs: [{ internalType: "address", name: "_token", type: "address" }, { internalType: "address", name: "_receiver", type: "address" }, { internalType: "uint256", name: "_amount", type: "uint256" }], name: "withdrawStuckFunds", outputs: [], stateMutability: "nonpayable", type: "function" }];
const subStorageAbi = [{ inputs: [], name: "NonContractCall", type: "error" }, { inputs: [], name: "SenderNotAdmin", type: "error" }, { inputs: [], name: "SenderNotOwner", type: "error" }, { inputs: [{ internalType: "address", name: "", type: "address" }, { internalType: "uint256", name: "", type: "uint256" }], name: "SenderNotSubOwnerError", type: "error" }, { inputs: [{ internalType: "uint256", name: "", type: "uint256" }, { internalType: "bool", name: "", type: "bool" }], name: "SubIdOutOfRange", type: "error" }, { inputs: [], name: "UserPositionsEmpty", type: "error" }, { anonymous: false, inputs: [{ indexed: true, internalType: "uint256", name: "subId", type: "uint256" }], name: "ActivateSub", type: "event" }, { anonymous: false, inputs: [{ indexed: true, internalType: "uint256", name: "subId", type: "uint256" }], name: "DeactivateSub", type: "event" }, { anonymous: false, inputs: [{ indexed: true, internalType: "uint256", name: "subId", type: "uint256" }, { indexed: true, internalType: "address", name: "proxy", type: "address" }, { indexed: true, internalType: "bytes32", name: "subHash", type: "bytes32" }, { components: [{ internalType: "uint64", name: "strategyOrBundleId", type: "uint64" }, { internalType: "bool", name: "isBundle", type: "bool" }, { internalType: "bytes[]", name: "triggerData", type: "bytes[]" }, { internalType: "bytes32[]", name: "subData", type: "bytes32[]" }], indexed: false, internalType: "struct StrategyModel.StrategySub", name: "subStruct", type: "tuple" }], name: "Subscribe", type: "event" }, { anonymous: false, inputs: [{ indexed: true, internalType: "uint256", name: "subId", type: "uint256" }, { indexed: true, internalType: "bytes32", name: "subHash", type: "bytes32" }, { components: [{ internalType: "uint64", name: "strategyOrBundleId", type: "uint64" }, { internalType: "bool", name: "isBundle", type: "bool" }, { internalType: "bytes[]", name: "triggerData", type: "bytes[]" }, { internalType: "bytes32[]", name: "subData", type: "bytes32[]" }], indexed: false, internalType: "struct StrategyModel.StrategySub", name: "subStruct", type: "tuple" }], name: "UpdateData", type: "event" }, { inputs: [{ internalType: "uint256", name: "_subId", type: "uint256" }], name: "activateSub", outputs: [], stateMutability: "nonpayable", type: "function" }, { inputs: [], name: "adminVault", outputs: [{ internalType: "contract AdminVault", name: "", type: "address" }], stateMutability: "view", type: "function" }, { inputs: [{ internalType: "uint256", name: "_subId", type: "uint256" }], name: "deactivateSub", outputs: [], stateMutability: "nonpayable", type: "function" }, { inputs: [{ internalType: "uint256", name: "_subId", type: "uint256" }], name: "getSub", outputs: [{ components: [{ internalType: "bytes20", name: "userProxy", type: "bytes20" }, { internalType: "bool", name: "isEnabled", type: "bool" }, { internalType: "bytes32", name: "strategySubHash", type: "bytes32" }], internalType: "struct StrategyModel.StoredSubData", name: "", type: "tuple" }], stateMutability: "view", type: "function" }, { inputs: [], name: "getSubsCount", outputs: [{ internalType: "uint256", name: "", type: "uint256" }], stateMutability: "view", type: "function" }, { inputs: [], name: "kill", outputs: [], stateMutability: "nonpayable", type: "function" }, { inputs: [], name: "registry", outputs: [{ internalType: "contract DFSRegistry", name: "", type: "address" }], stateMutability: "view", type: "function" }, { inputs: [{ internalType: "uint256", name: "", type: "uint256" }], name: "strategiesSubs", outputs: [{ internalType: "bytes20", name: "userProxy", type: "bytes20" }, { internalType: "bool", name: "isEnabled", type: "bool" }, { internalType: "bytes32", name: "strategySubHash", type: "bytes32" }], stateMutability: "view", type: "function" }, { inputs: [{ components: [{ internalType: "uint64", name: "strategyOrBundleId", type: "uint64" }, { internalType: "bool", name: "isBundle", type: "bool" }, { internalType: "bytes[]", name: "triggerData", type: "bytes[]" }, { internalType: "bytes32[]", name: "subData", type: "bytes32[]" }], internalType: "struct StrategyModel.StrategySub", name: "_sub", type: "tuple" }], name: "subscribeToStrategy", outputs: [{ internalType: "uint256", name: "", type: "uint256" }], stateMutability: "nonpayable", type: "function" }, { inputs: [{ internalType: "uint256", name: "_subId", type: "uint256" }, { components: [{ internalType: "uint64", name: "strategyOrBundleId", type: "uint64" }, { internalType: "bool", name: "isBundle", type: "bool" }, { internalType: "bytes[]", name: "triggerData", type: "bytes[]" }, { internalType: "bytes32[]", name: "subData", type: "bytes32[]" }], internalType: "struct StrategyModel.StrategySub", name: "_sub", type: "tuple" }], name: "updateSubData", outputs: [], stateMutability: "nonpayable", type: "function" }, { inputs: [{ internalType: "address", name: "_token", type: "address" }, { internalType: "address", name: "_receiver", type: "address" }, { internalType: "uint256", name: "_amount", type: "uint256" }], name: "withdrawStuckFunds", outputs: [], stateMutability: "nonpayable", type: "function" }];
const bundleStorageAbi = [{ inputs: [{ internalType: "uint64[]", name: "", type: "uint64[]" }], name: "DiffTriggersInBundle", type: "error" }, { inputs: [{ internalType: "address", name: "", type: "address" }, { internalType: "bool", name: "", type: "bool" }], name: "NoAuthToCreateBundle", type: "error" }, { inputs: [], name: "NonContractCall", type: "error" }, { inputs: [], name: "SenderNotAdmin", type: "error" }, { inputs: [], name: "SenderNotOwner", type: "error" }, { anonymous: false, inputs: [{ indexed: true, internalType: "uint256", name: "bundleId", type: "uint256" }], name: "BundleCreated", type: "event" }, { inputs: [], name: "adminVault", outputs: [{ internalType: "contract AdminVault", name: "", type: "address" }], stateMutability: "view", type: "function" }, { inputs: [{ internalType: "uint256", name: "", type: "uint256" }], name: "bundles", outputs: [{ internalType: "address", name: "creator", type: "address" }], stateMutability: "view", type: "function" }, { inputs: [{ internalType: "bool", name: "_openToPublic", type: "bool" }], name: "changeEditPermission", outputs: [], stateMutability: "nonpayable", type: "function" }, { inputs: [{ internalType: "uint64[]", name: "_strategyIds", type: "uint64[]" }], name: "createBundle", outputs: [{ internalType: "uint256", name: "", type: "uint256" }], stateMutability: "nonpayable", type: "function" }, { inputs: [{ internalType: "uint256", name: "_bundleId", type: "uint256" }], name: "getBundle", outputs: [{ components: [{ internalType: "address", name: "creator", type: "address" }, { internalType: "uint64[]", name: "strategyIds", type: "uint64[]" }], internalType: "struct StrategyModel.StrategyBundle", name: "", type: "tuple" }], stateMutability: "view", type: "function" }, { inputs: [], name: "getBundleCount", outputs: [{ internalType: "uint256", name: "", type: "uint256" }], stateMutability: "view", type: "function" }, { inputs: [{ internalType: "uint256", name: "_page", type: "uint256" }, { internalType: "uint256", name: "_perPage", type: "uint256" }], name: "getPaginatedBundles", outputs: [{ components: [{ internalType: "address", name: "creator", type: "address" }, { internalType: "uint64[]", name: "strategyIds", type: "uint64[]" }], internalType: "struct StrategyModel.StrategyBundle[]", name: "", type: "tuple[]" }], stateMutability: "view", type: "function" }, { inputs: [{ internalType: "uint256", name: "_bundleId", type: "uint256" }, { internalType: "uint256", name: "_strategyIndex", type: "uint256" }], name: "getStrategyId", outputs: [{ internalType: "uint256", name: "", type: "uint256" }], stateMutability: "view", type: "function" }, { inputs: [], name: "kill", outputs: [], stateMutability: "nonpayable", type: "function" }, { inputs: [], name: "openToPublic", outputs: [{ internalType: "bool", name: "", type: "bool" }], stateMutability: "view", type: "function" }, { inputs: [], name: "registry", outputs: [{ internalType: "contract DFSRegistry", name: "", type: "address" }], stateMutability: "view", type: "function" }, { inputs: [{ internalType: "address", name: "_token", type: "address" }, { internalType: "address", name: "_receiver", type: "address" }, { internalType: "uint256", name: "_amount", type: "uint256" }], name: "withdrawStuckFunds", outputs: [], stateMutability: "nonpayable", type: "function" }];
const safeProxyFactoryAbi = [{ anonymous: false, inputs: [{ indexed: true, internalType: "address", name: "proxy", type: "address" }, { indexed: false, internalType: "address", name: "singleton", type: "address" }], name: "ProxyCreation", type: "event" }, { inputs: [{ internalType: "address", name: "singleton", type: "address" }, { internalType: "bytes", name: "initializer", type: "bytes" }, { internalType: "uint256", name: "saltNonce", type: "uint256" }], name: "createProxyWithNonce", outputs: [{ internalType: "address", name: "proxy", type: "address" }], stateMutability: "nonpayable", type: "function" }, { inputs: [], name: "proxyCreationCode", outputs: [{ internalType: "bytes", name: "", type: "bytes" }], stateMutability: "pure", type: "function" }];
const safeAbi = [{ inputs: [{ internalType: "bytes32", name: "hashToApprove", type: "bytes32" }], name: "approveHash", outputs: [], stateMutability: "nonpayable", type: "function" }, { inputs: [{ internalType: "address", name: "executor", type: "address" }, { internalType: "bytes32", name: "dataHash", type: "bytes32" }, { internalType: "bytes", name: "", type: "bytes" }, { internalType: "bytes", name: "signatures", type: "bytes" }, { internalType: "uint256", name: "requiredSignatures", type: "uint256" }], name: "checkNSignatures", outputs: [], stateMutability: "view", type: "function" }, { inputs: [{ internalType: "bytes32", name: "dataHash", type: "bytes32" }, { internalType: "bytes", name: "data", type: "bytes" }, { internalType: "bytes", name: "signatures", type: "bytes" }], name: "checkSignatures", outputs: [], stateMutability: "view", type: "function" }, { inputs: [{ internalType: "address", name: "prevModule", type: "address" }, { internalType: "address", name: "module", type: "address" }], name: "disableModule", outputs: [], stateMutability: "nonpayable", type: "function" }, { inputs: [], name: "domainSeparator", outputs: [{ internalType: "bytes32", name: "", type: "bytes32" }], stateMutability: "view", type: "function" }, { inputs: [{ internalType: "address", name: "module", type: "address" }], name: "enableModule", outputs: [], stateMutability: "nonpayable", type: "function" }, { inputs: [{ internalType: "address", name: "to", type: "address" }, { internalType: "uint256", name: "value", type: "uint256" }, { internalType: "bytes", name: "data", type: "bytes" }, { internalType: "enum ISafe.Operation", name: "operation", type: "uint8" }, { internalType: "uint256", name: "safeTxGas", type: "uint256" }, { internalType: "uint256", name: "baseGas", type: "uint256" }, { internalType: "uint256", name: "gasPrice", type: "uint256" }, { internalType: "address", name: "gasToken", type: "address" }, { internalType: "address payable", name: "refundReceiver", type: "address" }, { internalType: "bytes", name: "signatures", type: "bytes" }], name: "execTransaction", outputs: [{ internalType: "bool", name: "success", type: "bool" }], stateMutability: "payable", type: "function" }, { inputs: [{ internalType: "address", name: "to", type: "address" }, { internalType: "uint256", name: "value", type: "uint256" }, { internalType: "bytes", name: "data", type: "bytes" }, { internalType: "enum ISafe.Operation", name: "operation", type: "uint8" }], name: "execTransactionFromModule", outputs: [{ internalType: "bool", name: "success", type: "bool" }], stateMutability: "nonpayable", type: "function" }, { inputs: [{ internalType: "address", name: "start", type: "address" }, { internalType: "uint256", name: "pageSize", type: "uint256" }], name: "getModulesPaginated", outputs: [{ internalType: "address[]", name: "array", type: "address[]" }, { internalType: "address", name: "next", type: "address" }], stateMutability: "view", type: "function" }, { inputs: [], name: "getOwners", outputs: [{ internalType: "address[]", name: "", type: "address[]" }], stateMutability: "view", type: "function" }, { inputs: [], name: "getThreshold", outputs: [{ internalType: "uint256", name: "", type: "uint256" }], stateMutability: "view", type: "function" }, { inputs: [{ internalType: "address", name: "to", type: "address" }, { internalType: "uint256", name: "value", type: "uint256" }, { internalType: "bytes", name: "data", type: "bytes" }, { internalType: "enum ISafe.Operation", name: "operation", type: "uint8" }, { internalType: "uint256", name: "safeTxGas", type: "uint256" }, { internalType: "uint256", name: "baseGas", type: "uint256" }, { internalType: "uint256", name: "gasPrice", type: "uint256" }, { internalType: "address", name: "gasToken", type: "address" }, { internalType: "address", name: "refundReceiver", type: "address" }, { internalType: "uint256", name: "_nonce", type: "uint256" }], name: "getTransactionHash", outputs: [{ internalType: "bytes32", name: "", type: "bytes32" }], stateMutability: "view", type: "function" }, { inputs: [{ internalType: "address", name: "module", type: "address" }], name: "isModuleEnabled", outputs: [{ internalType: "bool", name: "", type: "bool" }], stateMutability: "view", type: "function" }, { inputs: [{ internalType: "address", name: "owner", type: "address" }], name: "isOwner", outputs: [{ internalType: "bool", name: "", type: "bool" }], stateMutability: "view", type: "function" }, { inputs: [], name: "nonce", outputs: [{ internalType: "uint256", name: "", type: "uint256" }], stateMutability: "view", type: "function" }, { inputs: [{ internalType: "address", name: "handler", type: "address" }], name: "setFallbackHandler", outputs: [], stateMutability: "nonpayable", type: "function" }, { inputs: [{ internalType: "address[]", name: "_owners", type: "address[]" }, { internalType: "uint256", name: "_threshold", type: "uint256" }, { internalType: "address", name: "to", type: "address" }, { internalType: "bytes", name: "data", type: "bytes" }, { internalType: "address", name: "fallbackHandler", type: "address" }, { internalType: "address", name: "paymentToken", type: "address" }, { internalType: "uint256", name: "payment", type: "uint256" }, { internalType: "address payable", name: "paymentReceiver", type: "address" }], name: "setup", outputs: [], stateMutability: "nonpayable", type: "function" }];
const cometAbi = [{ inputs: [{ components: [{ internalType: "address", name: "governor", type: "address" }, { internalType: "address", name: "pauseGuardian", type: "address" }, { internalType: "address", name: "baseToken", type: "address" }, { internalType: "address", name: "baseTokenPriceFeed", type: "address" }, { internalType: "address", name: "extensionDelegate", type: "address" }, { internalType: "uint64", name: "supplyKink", type: "uint64" }, { internalType: "uint64", name: "supplyPerYearInterestRateSlopeLow", type: "uint64" }, { internalType: "uint64", name: "supplyPerYearInterestRateSlopeHigh", type: "uint64" }, { internalType: "uint64", name: "supplyPerYearInterestRateBase", type: "uint64" }, { internalType: "uint64", name: "borrowKink", type: "uint64" }, { internalType: "uint64", name: "borrowPerYearInterestRateSlopeLow", type: "uint64" }, { internalType: "uint64", name: "borrowPerYearInterestRateSlopeHigh", type: "uint64" }, { internalType: "uint64", name: "borrowPerYearInterestRateBase", type: "uint64" }, { internalType: "uint64", name: "storeFrontPriceFactor", type: "uint64" }, { internalType: "uint64", name: "trackingIndexScale", type: "uint64" }, { internalType: "uint64", name: "baseTrackingSupplySpeed", type: "uint64" }, { internalType: "uint64", name: "baseTrackingBorrowSpeed", type: "uint64" }, { internalType: "uint104", name: "baseMinForRewards", type: "uint104" }, { internalType: "uint104", name: "baseBorrowMin", type: "uint104" }, { internalType: "uint104", name: "targetReserves", type: "uint104" }, { components: [{ internalType: "address", name: "asset", type: "address" }, { internalType: "address", name: "priceFeed", type: "address" }, { internalType: "uint8", name: "decimals", type: "uint8" }, { internalType: "uint64", name: "borrowCollateralFactor", type: "uint64" }, { internalType: "uint64", name: "liquidateCollateralFactor", type: "uint64" }, { internalType: "uint64", name: "liquidationFactor", type: "uint64" }, { internalType: "uint128", name: "supplyCap", type: "uint128" }], internalType: "struct CometConfiguration.AssetConfig[]", name: "assetConfigs", type: "tuple[]" }], internalType: "struct CometConfiguration.Configuration", name: "config", type: "tuple" }], stateMutability: "nonpayable", type: "constructor" }, { inputs: [], name: "Absurd", type: "error" }, { inputs: [], name: "AlreadyInitialized", type: "error" }, { inputs: [], name: "BadAsset", type: "error" }, { inputs: [], name: "BadDecimals", type: "error" }, { inputs: [], name: "BadDiscount", type: "error" }, { inputs: [], name: "BadMinimum", type: "error" }, { inputs: [], name: "BadPrice", type: "error" }, { inputs: [], name: "BorrowCFTooLarge", type: "error" }, { inputs: [], name: "BorrowTooSmall", type: "error" }, { inputs: [], name: "InsufficientReserves", type: "error" }, { inputs: [], name: "InvalidInt104", type: "error" }, { inputs: [], name: "InvalidInt256", type: "error" }, { inputs: [], name: "InvalidUInt104", type: "error" }, { inputs: [], name: "InvalidUInt128", type: "error" }, { inputs: [], name: "InvalidUInt64", type: "error" }, { inputs: [], name: "LiquidateCFTooLarge", type: "error" }, { inputs: [], name: "NegativeNumber", type: "error" }, { inputs: [], name: "NoSelfTransfer", type: "error" }, { inputs: [], name: "NotCollateralized", type: "error" }, { inputs: [], name: "NotForSale", type: "error" }, { inputs: [], name: "NotLiquidatable", type: "error" }, { inputs: [], name: "Paused", type: "error" }, { inputs: [], name: "ReentrantCallBlocked", type: "error" }, { inputs: [], name: "SupplyCapExceeded", type: "error" }, { inputs: [], name: "TimestampTooLarge", type: "error" }, { inputs: [], name: "TooManyAssets", type: "error" }, { inputs: [], name: "TooMuchSlippage", type: "error" }, { inputs: [], name: "TransferInFailed", type: "error" }, { inputs: [], name: "TransferOutFailed", type: "error" }, { inputs: [], name: "Unauthorized", type: "error" }, { anonymous: false, inputs: [{ indexed: true, internalType: "address", name: "absorber", type: "address" }, { indexed: true, internalType: "address", name: "borrower", type: "address" }, { indexed: true, internalType: "address", name: "asset", type: "address" }, { indexed: false, internalType: "uint256", name: "collateralAbsorbed", type: "uint256" }, { indexed: false, internalType: "uint256", name: "usdValue", type: "uint256" }], name: "AbsorbCollateral", type: "event" }, { anonymous: false, inputs: [{ indexed: true, internalType: "address", name: "absorber", type: "address" }, { indexed: true, internalType: "address", name: "borrower", type: "address" }, { indexed: false, internalType: "uint256", name: "basePaidOut", type: "uint256" }, { indexed: false, internalType: "uint256", name: "usdValue", type: "uint256" }], name: "AbsorbDebt", type: "event" }, { anonymous: false, inputs: [{ indexed: true, internalType: "address", name: "buyer", type: "address" }, { indexed: true, internalType: "address", name: "asset", type: "address" }, { indexed: false, internalType: "uint256", name: "baseAmount", type: "uint256" }, { indexed: false, internalType: "uint256", name: "collateralAmount", type: "uint256" }], name: "BuyCollateral", type: "event" }, { anonymous: false, inputs: [{ indexed: false, internalType: "bool", name: "supplyPaused", type: "bool" }, { indexed: false, internalType: "bool", name: "transferPaused", type: "bool" }, { indexed: false, internalType: "bool", name: "withdrawPaused", type: "bool" }, { indexed: false, internalType: "bool", name: "absorbPaused", type: "bool" }, { indexed: false, internalType: "bool", name: "buyPaused", type: "bool" }], name: "PauseAction", type: "event" }, { anonymous: false, inputs: [{ indexed: true, internalType: "address", name: "from", type: "address" }, { indexed: true, internalType: "address", name: "dst", type: "address" }, { indexed: false, internalType: "uint256", name: "amount", type: "uint256" }], name: "Supply", type: "event" }, { anonymous: false, inputs: [{ indexed: true, internalType: "address", name: "from", type: "address" }, { indexed: true, internalType: "address", name: "dst", type: "address" }, { indexed: true, internalType: "address", name: "asset", type: "address" }, { indexed: false, internalType: "uint256", name: "amount", type: "uint256" }], name: "SupplyCollateral", type: "event" }, { anonymous: false, inputs: [{ indexed: true, internalType: "address", name: "from", type: "address" }, { indexed: true, internalType: "address", name: "to", type: "address" }, { indexed: false, internalType: "uint256", name: "amount", type: "uint256" }], name: "Transfer", type: "event" }, { anonymous: false, inputs: [{ indexed: true, internalType: "address", name: "from", type: "address" }, { indexed: true, internalType: "address", name: "to", type: "address" }, { indexed: true, internalType: "address", name: "asset", type: "address" }, { indexed: false, internalType: "uint256", name: "amount", type: "uint256" }], name: "TransferCollateral", type: "event" }, { anonymous: false, inputs: [{ indexed: true, internalType: "address", name: "src", type: "address" }, { indexed: true, internalType: "address", name: "to", type: "address" }, { indexed: false, internalType: "uint256", name: "amount", type: "uint256" }], name: "Withdraw", type: "event" }, { anonymous: false, inputs: [{ indexed: true, internalType: "address", name: "src", type: "address" }, { indexed: true, internalType: "address", name: "to", type: "address" }, { indexed: true, internalType: "address", name: "asset", type: "address" }, { indexed: false, internalType: "uint256", name: "amount", type: "uint256" }], name: "WithdrawCollateral", type: "event" }, { anonymous: false, inputs: [{ indexed: true, internalType: "address", name: "to", type: "address" }, { indexed: false, internalType: "uint256", name: "amount", type: "uint256" }], name: "WithdrawReserves", type: "event" }, { stateMutability: "payable", type: "fallback" }, { inputs: [{ internalType: "address", name: "absorber", type: "address" }, { internalType: "address[]", name: "accounts", type: "address[]" }], name: "absorb", outputs: [], stateMutability: "nonpayable", type: "function" }, { inputs: [{ internalType: "address", name: "account", type: "address" }], name: "accrueAccount", outputs: [], stateMutability: "nonpayable", type: "function" }, { inputs: [{ internalType: "address", name: "manager", type: "address" }, { internalType: "address", name: "asset", type: "address" }, { internalType: "uint256", name: "amount", type: "uint256" }], name: "approveThis", outputs: [], stateMutability: "nonpayable", type: "function" }, { inputs: [], name: "assetList", outputs: [{ internalType: "address", name: "", type: "address" }], stateMutability: "view", type: "function" }, { inputs: [{ internalType: "address", name: "account", type: "address" }], name: "balanceOf", outputs: [{ internalType: "uint256", name: "", type: "uint256" }], stateMutability: "view", type: "function" }, { inputs: [], name: "baseBorrowMin", outputs: [{ internalType: "uint256", name: "", type: "uint256" }], stateMutability: "view", type: "function" }, { inputs: [], name: "baseMinForRewards", outputs: [{ internalType: "uint256", name: "", type: "uint256" }], stateMutability: "view", type: "function" }, { inputs: [], name: "baseScale", outputs: [{ internalType: "uint256", name: "", type: "uint256" }], stateMutability: "view", type: "function" }, { inputs: [], name: "baseToken", outputs: [{ internalType: "address", name: "", type: "address" }], stateMutability: "view", type: "function" }, { inputs: [], name: "baseTokenPriceFeed", outputs: [{ internalType: "address", name: "", type: "address" }], stateMutability: "view", type: "function" }, { inputs: [], name: "baseTrackingBorrowSpeed", outputs: [{ internalType: "uint256", name: "", type: "uint256" }], stateMutability: "view", type: "function" }, { inputs: [], name: "baseTrackingSupplySpeed", outputs: [{ internalType: "uint256", name: "", type: "uint256" }], stateMutability: "view", type: "function" }, { inputs: [{ internalType: "address", name: "account", type: "address" }], name: "borrowBalanceOf", outputs: [{ internalType: "uint256", name: "", type: "uint256" }], stateMutability: "view", type: "function" }, { inputs: [], name: "borrowKink", outputs: [{ internalType: "uint256", name: "", type: "uint256" }], stateMutability: "view", type: "function" }, { inputs: [], name: "borrowPerSecondInterestRateBase", outputs: [{ internalType: "uint256", name: "", type: "uint256" }], stateMutability: "view", type: "function" }, { inputs: [], name: "borrowPerSecondInterestRateSlopeHigh", outputs: [{ internalType: "uint256", name: "", type: "uint256" }], stateMutability: "view", type: "function" }, { inputs: [], name: "borrowPerSecondInterestRateSlopeLow", outputs: [{ internalType: "uint256", name: "", type: "uint256" }], stateMutability: "view", type: "function" }, { inputs: [{ internalType: "address", name: "asset", type: "address" }, { internalType: "uint256", name: "minAmount", type: "uint256" }, { internalType: "uint256", name: "baseAmount", type: "uint256" }, { internalType: "address", name: "recipient", type: "address" }], name: "buyCollateral", outputs: [], stateMutability: "nonpayable", type: "function" }, { inputs: [], name: "decimals", outputs: [{ internalType: "uint8", name: "", type: "uint8" }], stateMutability: "view", type: "function" }, { inputs: [], name: "extensionDelegate", outputs: [{ internalType: "address", name: "", type: "address" }], stateMutability: "view", type: "function" }, { inputs: [{ internalType: "uint8", name: "i", type: "uint8" }], name: "getAssetInfo", outputs: [{ components: [{ internalType: "uint8", name: "offset", type: "uint8" }, { internalType: "address", name: "asset", type: "address" }, { internalType: "address", name: "priceFeed", type: "address" }, { internalType: "uint64", name: "scale", type: "uint64" }, { internalType: "uint64", name: "borrowCollateralFactor", type: "uint64" }, { internalType: "uint64", name: "liquidateCollateralFactor", type: "uint64" }, { internalType: "uint64", name: "liquidationFactor", type: "uint64" }, { internalType: "uint128", name: "supplyCap", type: "uint128" }], internalType: "struct CometCore.AssetInfo", name: "", type: "tuple" }], stateMutability: "view", type: "function" }, { inputs: [{ internalType: "address", name: "asset", type: "address" }], name: "getAssetInfoByAddress", outputs: [{ components: [{ internalType: "uint8", name: "offset", type: "uint8" }, { internalType: "address", name: "asset", type: "address" }, { internalType: "address", name: "priceFeed", type: "address" }, { internalType: "uint64", name: "scale", type: "uint64" }, { internalType: "uint64", name: "borrowCollateralFactor", type: "uint64" }, { internalType: "uint64", name: "liquidateCollateralFactor", type: "uint64" }, { internalType: "uint64", name: "liquidationFactor", type: "uint64" }, { internalType: "uint128", name: "supplyCap", type: "uint128" }], internalType: "struct CometCore.AssetInfo", name: "", type: "tuple" }], stateMutability: "view", type: "function" }, { inputs: [{ internalType: "uint256", name: "utilization", type: "uint256" }], name: "getBorrowRate", outputs: [{ internalType: "uint64", name: "", type: "uint64" }], stateMutability: "view", type: "function" }, { inputs: [{ internalType: "address", name: "asset", type: "address" }], name: "getCollateralReserves", outputs: [{ internalType: "uint256", name: "", type: "uint256" }], stateMutability: "view", type: "function" }, { inputs: [{ internalType: "address", name: "priceFeed", type: "address" }], name: "getPrice", outputs: [{ internalType: "uint256", name: "", type: "uint256" }], stateMutability: "view", type: "function" }, { inputs: [], name: "getReserves", outputs: [{ internalType: "int256", name: "", type: "int256" }], stateMutability: "view", type: "function" }, { inputs: [{ internalType: "uint256", name: "utilization", type: "uint256" }], name: "getSupplyRate", outputs: [{ internalType: "uint64", name: "", type: "uint64" }], stateMutability: "view", type: "function" }, { inputs: [], name: "getUtilization", outputs: [{ internalType: "uint256", name: "", type: "uint256" }], stateMutability: "view", type: "function" }, { inputs: [], name: "governor", outputs: [{ internalType: "address", name: "", type: "address" }], stateMutability: "view", type: "function" }, { inputs: [{ internalType: "address", name: "owner", type: "address" }, { internalType: "address", name: "manager", type: "address" }], name: "hasPermission", outputs: [{ internalType: "bool", name: "", type: "bool" }], stateMutability: "view", type: "function" }, { inputs: [], name: "initializeStorage", outputs: [], stateMutability: "nonpayable", type: "function" }, { inputs: [], name: "isAbsorbPaused", outputs: [{ internalType: "bool", name: "", type: "bool" }], stateMutability: "view", type: "function" }, { inputs: [{ internalType: "address", name: "", type: "address" }, { internalType: "address", name: "", type: "address" }], name: "isAllowed", outputs: [{ internalType: "bool", name: "", type: "bool" }], stateMutability: "view", type: "function" }, { inputs: [{ internalType: "address", name: "account", type: "address" }], name: "isBorrowCollateralized", outputs: [{ internalType: "bool", name: "", type: "bool" }], stateMutability: "view", type: "function" }, { inputs: [], name: "isBuyPaused", outputs: [{ internalType: "bool", name: "", type: "bool" }], stateMutability: "view", type: "function" }, { inputs: [{ internalType: "address", name: "account", type: "address" }], name: "isLiquidatable", outputs: [{ internalType: "bool", name: "", type: "bool" }], stateMutability: "view", type: "function" }, { inputs: [], name: "isSupplyPaused", outputs: [{ internalType: "bool", name: "", type: "bool" }], stateMutability: "view", type: "function" }, { inputs: [], name: "isTransferPaused", outputs: [{ internalType: "bool", name: "", type: "bool" }], stateMutability: "view", type: "function" }, { inputs: [], name: "isWithdrawPaused", outputs: [{ internalType: "bool", name: "", type: "bool" }], stateMutability: "view", type: "function" }, { inputs: [{ internalType: "address", name: "", type: "address" }], name: "liquidatorPoints", outputs: [{ internalType: "uint32", name: "numAbsorbs", type: "uint32" }, { internalType: "uint64", name: "numAbsorbed", type: "uint64" }, { internalType: "uint128", name: "approxSpend", type: "uint128" }, { internalType: "uint32", name: "_reserved", type: "uint32" }], stateMutability: "view", type: "function" }, { inputs: [], name: "numAssets", outputs: [{ internalType: "uint8", name: "", type: "uint8" }], stateMutability: "view", type: "function" }, { inputs: [{ internalType: "bool", name: "supplyPaused", type: "bool" }, { internalType: "bool", name: "transferPaused", type: "bool" }, { internalType: "bool", name: "withdrawPaused", type: "bool" }, { internalType: "bool", name: "absorbPaused", type: "bool" }, { internalType: "bool", name: "buyPaused", type: "bool" }], name: "pause", outputs: [], stateMutability: "nonpayable", type: "function" }, { inputs: [], name: "pauseGuardian", outputs: [{ internalType: "address", name: "", type: "address" }], stateMutability: "view", type: "function" }, { inputs: [{ internalType: "address", name: "asset", type: "address" }, { internalType: "uint256", name: "baseAmount", type: "uint256" }], name: "quoteCollateral", outputs: [{ internalType: "uint256", name: "", type: "uint256" }], stateMutability: "view", type: "function" }, { inputs: [], name: "storeFrontPriceFactor", outputs: [{ internalType: "uint256", name: "", type: "uint256" }], stateMutability: "view", type: "function" }, { inputs: [{ internalType: "address", name: "asset", type: "address" }, { internalType: "uint256", name: "amount", type: "uint256" }], name: "supply", outputs: [], stateMutability: "nonpayable", type: "function" }, { inputs: [{ internalType: "address", name: "from", type: "address" }, { internalType: "address", name: "dst", type: "address" }, { internalType: "address", name: "asset", type: "address" }, { internalType: "uint256", name: "amount", type: "uint256" }], name: "supplyFrom", outputs: [], stateMutability: "nonpayable", type: "function" }, { inputs: [], name: "supplyKink", outputs: [{ internalType: "uint256", name: "", type: "uint256" }], stateMutability: "view", type: "function" }, { inputs: [], name: "supplyPerSecondInterestRateBase", outputs: [{ internalType: "uint256", name: "", type: "uint256" }], stateMutability: "view", type: "function" }, { inputs: [], name: "supplyPerSecondInterestRateSlopeHigh", outputs: [{ internalType: "uint256", name: "", type: "uint256" }], stateMutability: "view", type: "function" }, { inputs: [], name: "supplyPerSecondInterestRateSlopeLow", outputs: [{ internalType: "uint256", name: "", type: "uint256" }], stateMutability: "view", type: "function" }, { inputs: [{ internalType: "address", name: "dst", type: "address" }, { internalType: "address", name: "asset", type: "address" }, { internalType: "uint256", name: "amount", type: "uint256" }], name: "supplyTo", outputs: [], stateMutability: "nonpayable", type: "function" }, { inputs: [], name: "targetReserves", outputs: [{ internalType: "uint256", name: "", type: "uint256" }], stateMutability: "view", type: "function" }, { inputs: [], name: "totalBorrow", outputs: [{ internalType: "uint256", name: "", type: "uint256" }], stateMutability: "view", type: "function" }, { inputs: [], name: "totalSupply", outputs: [{ internalType: "uint256", name: "", type: "uint256" }], stateMutability: "view", type: "function" }, { inputs: [{ internalType: "address", name: "", type: "address" }], name: "totalsCollateral", outputs: [{ internalType: "uint128", name: "totalSupplyAsset", type: "uint128" }, { internalType: "uint128", name: "_reserved", type: "uint128" }], stateMutability: "view", type: "function" }, { inputs: [], name: "trackingIndexScale", outputs: [{ internalType: "uint256", name: "", type: "uint256" }], stateMutability: "view", type: "function" }, { inputs: [{ internalType: "address", name: "dst", type: "address" }, { internalType: "uint256", name: "amount", type: "uint256" }], name: "transfer", outputs: [{ internalType: "bool", name: "", type: "bool" }], stateMutability: "nonpayable", type: "function" }, { inputs: [{ internalType: "address", name: "dst", type: "address" }, { internalType: "address", name: "asset", type: "address" }, { internalType: "uint256", name: "amount", type: "uint256" }], name: "transferAsset", outputs: [], stateMutability: "nonpayable", type: "function" }, { inputs: [{ internalType: "address", name: "src", type: "address" }, { internalType: "address", name: "dst", type: "address" }, { internalType: "address", name: "asset", type: "address" }, { internalType: "uint256", name: "amount", type: "uint256" }], name: "transferAssetFrom", outputs: [], stateMutability: "nonpayable", type: "function" }, { inputs: [{ internalType: "address", name: "src", type: "address" }, { internalType: "address", name: "dst", type: "address" }, { internalType: "uint256", name: "amount", type: "uint256" }], name: "transferFrom", outputs: [{ internalType: "bool", name: "", type: "bool" }], stateMutability: "nonpayable", type: "function" }, { inputs: [{ internalType: "address", name: "", type: "address" }], name: "userBasic", outputs: [{ internalType: "int104", name: "principal", type: "int104" }, { internalType: "uint64", name: "baseTrackingIndex", type: "uint64" }, { internalType: "uint64", name: "baseTrackingAccrued", type: "uint64" }, { internalType: "uint16", name: "assetsIn", type: "uint16" }, { internalType: "uint8", name: "_reserved", type: "uint8" }], stateMutability: "view", type: "function" }, { inputs: [{ internalType: "address", name: "", type: "address" }, { internalType: "address", name: "", type: "address" }], name: "userCollateral", outputs: [{ internalType: "uint128", name: "balance", type: "uint128" }, { internalType: "uint128", name: "_reserved", type: "uint128" }], stateMutability: "view", type: "function" }, { inputs: [{ internalType: "address", name: "", type: "address" }], name: "userNonce", outputs: [{ internalType: "uint256", name: "", type: "uint256" }], stateMutability: "view", type: "function" }, { inputs: [{ internalType: "address", name: "asset", type: "address" }, { internalType: "uint256", name: "amount", type: "uint256" }], name: "withdraw", outputs: [], stateMutability: "nonpayable", type: "function" }, { inputs: [{ internalType: "address", name: "src", type: "address" }, { internalType: "address", name: "to", type: "address" }, { internalType: "address", name: "asset", type: "address" }, { internalType: "uint256", name: "amount", type: "uint256" }], name: "withdrawFrom", outputs: [], stateMutability: "nonpayable", type: "function" }, { inputs: [{ internalType: "address", name: "to", type: "address" }, { internalType: "uint256", name: "amount", type: "uint256" }], name: "withdrawReserves", outputs: [], stateMutability: "nonpayable", type: "function" }, { inputs: [{ internalType: "address", name: "to", type: "address" }, { internalType: "address", name: "asset", type: "address" }, { internalType: "uint256", name: "amount", type: "uint256" }], name: "withdrawTo", outputs: [], stateMutability: "nonpayable", type: "function" }];

module.exports = {
    botAuthAbi,
    dfsRegistryAbi,
    iProxyERC20Abi,
    erc20Abi,
    proxyRegistryAbi,
    proxyAbi,
    subProxyAbi,
    subStorageAbi,
    bundleStorageAbi,
    safeProxyFactoryAbi,
    safeAbi,
    cometAbi
};
