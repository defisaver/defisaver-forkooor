const liquityViewAbi = [{ inputs: [], name: "BorrowerOperations", outputs: [{ internalType: "contract IBorrowerOperations", name: "", type: "address" }], stateMutability: "view", type: "function" }, { inputs: [], name: "CBManager", outputs: [{ internalType: "contract IChickenBondManager", name: "", type: "address" }], stateMutability: "view", type: "function" }, { inputs: [], name: "CollSurplusPool", outputs: [{ internalType: "contract ICollSurplusPool", name: "", type: "address" }], stateMutability: "view", type: "function" }, { inputs: [], name: "HintHelpers", outputs: [{ internalType: "contract IHintHelpers", name: "", type: "address" }], stateMutability: "view", type: "function" }, { inputs: [], name: "LQTYStaking", outputs: [{ internalType: "contract ILQTYStaking", name: "", type: "address" }], stateMutability: "view", type: "function" }, { inputs: [], name: "LUSD_GAS_COMPENSATION", outputs: [{ internalType: "uint256", name: "", type: "uint256" }], stateMutability: "view", type: "function" }, { inputs: [], name: "MIN_DEBT", outputs: [{ internalType: "uint256", name: "", type: "uint256" }], stateMutability: "view", type: "function" }, { inputs: [], name: "PriceFeed", outputs: [{ internalType: "contract IPriceFeed", name: "", type: "address" }], stateMutability: "view", type: "function" }, { inputs: [], name: "SortedTroves", outputs: [{ internalType: "contract ISortedTroves", name: "", type: "address" }], stateMutability: "view", type: "function" }, { inputs: [], name: "StabilityPool", outputs: [{ internalType: "contract IStabilityPool", name: "", type: "address" }], stateMutability: "view", type: "function" }, { inputs: [], name: "TroveManager", outputs: [{ internalType: "contract ITroveManager", name: "", type: "address" }], stateMutability: "view", type: "function" }, { inputs: [{ internalType: "uint256", name: "_coll", type: "uint256" }, { internalType: "uint256", name: "_debt", type: "uint256" }], name: "computeNICR", outputs: [{ internalType: "uint256", name: "", type: "uint256" }], stateMutability: "pure", type: "function" }, { inputs: [{ internalType: "uint256", name: "_ICR", type: "uint256" }, { internalType: "address", name: "_prevId", type: "address" }, { internalType: "address", name: "_nextId", type: "address" }], name: "findInsertPosition", outputs: [{ internalType: "address", name: "upperHint", type: "address" }, { internalType: "address", name: "lowerHint", type: "address" }], stateMutability: "view", type: "function" }, { inputs: [{ internalType: "uint256", name: "_CR", type: "uint256" }, { internalType: "uint256", name: "_numTrials", type: "uint256" }, { internalType: "uint256", name: "_inputRandomSeed", type: "uint256" }], name: "getApproxHint", outputs: [{ internalType: "address", name: "hintAddress", type: "address" }, { internalType: "uint256", name: "diff", type: "uint256" }, { internalType: "uint256", name: "latestRandomSeed", type: "uint256" }], stateMutability: "view", type: "function" }, { inputs: [{ internalType: "address", name: "_of", type: "address" }, { internalType: "uint256", name: "_acc", type: "uint256" }, { internalType: "uint256", name: "_iterations", type: "uint256" }], name: "getDebtInFront", outputs: [{ internalType: "address", name: "next", type: "address" }, { internalType: "uint256", name: "debt", type: "uint256" }], stateMutability: "view", type: "function" }, { inputs: [{ internalType: "address", name: "_depositor", type: "address" }], name: "getDepositorInfo", outputs: [{ internalType: "uint256", name: "compoundedLUSD", type: "uint256" }, { internalType: "uint256", name: "ethGain", type: "uint256" }, { internalType: "uint256", name: "lqtyGain", type: "uint256" }], stateMutability: "view", type: "function" }, { inputs: [{ internalType: "uint256", name: "_collAmount", type: "uint256" }, { internalType: "uint256", name: "_debtAmount", type: "uint256" }, { internalType: "uint256", name: "_numTrials", type: "uint256" }, { internalType: "uint256", name: "_inputRandomSeed", type: "uint256" }], name: "getInsertPosition", outputs: [{ internalType: "address", name: "upperHint", type: "address" }, { internalType: "address", name: "lowerHint", type: "address" }], stateMutability: "view", type: "function" }, { inputs: [{ internalType: "uint256", name: "_collAmount", type: "uint256" }, { internalType: "uint256", name: "_debtAmount", type: "uint256" }, { internalType: "uint256", name: "_numTrials", type: "uint256" }, { internalType: "uint256", name: "_inputRandomSeed", type: "uint256" }, { internalType: "address", name: "_troveOwner", type: "address" }], name: "getInsertPositionForTrove", outputs: [{ internalType: "address", name: "upperHint", type: "address" }, { internalType: "address", name: "lowerHint", type: "address" }], stateMutability: "view", type: "function" }, { inputs: [{ internalType: "uint256", name: "_LUSDamount", type: "uint256" }, { internalType: "uint256", name: "_price", type: "uint256" }, { internalType: "uint256", name: "_maxIterations", type: "uint256" }], name: "getRedemptionHints", outputs: [{ internalType: "address", name: "firstRedemptionHint", type: "address" }, { internalType: "uint256", name: "partialRedemptionHintNICR", type: "uint256" }, { internalType: "uint256", name: "truncatedLUSDamount", type: "uint256" }], stateMutability: "view", type: "function" }, { inputs: [{ internalType: "address", name: "_user", type: "address" }], name: "getStakeInfo", outputs: [{ internalType: "uint256", name: "stake", type: "uint256" }, { internalType: "uint256", name: "ethGain", type: "uint256" }, { internalType: "uint256", name: "lusdGain", type: "uint256" }], stateMutability: "view", type: "function" }, { inputs: [{ internalType: "address", name: "_troveOwner", type: "address" }], name: "getTroveInfo", outputs: [{ internalType: "uint256", name: "troveStatus", type: "uint256" }, { internalType: "uint256", name: "collAmount", type: "uint256" }, { internalType: "uint256", name: "debtAmount", type: "uint256" }, { internalType: "uint256", name: "collPrice", type: "uint256" }, { internalType: "uint256", name: "TCRatio", type: "uint256" }, { internalType: "uint256", name: "borrowingFeeWithDecay", type: "uint256" }, { internalType: "bool", name: "recoveryMode", type: "bool" }], stateMutability: "view", type: "function" }, { inputs: [], name: "isRecoveryMode", outputs: [{ internalType: "bool", name: "", type: "bool" }], stateMutability: "view", type: "function" }, { inputs: [{ internalType: "address", name: "_troveOwner", type: "address" }, { internalType: "enum LiquityView.CollChange", name: "collChangeAction", type: "uint8" }, { internalType: "enum LiquityView.DebtChange", name: "debtChangeAction", type: "uint8" }, { internalType: "address", name: "_from", type: "address" }, { internalType: "uint256", name: "_collAmount", type: "uint256" }, { internalType: "uint256", name: "_lusdAmount", type: "uint256" }], name: "predictNICRForAdjust", outputs: [{ internalType: "uint256", name: "NICR", type: "uint256" }], stateMutability: "view", type: "function" }];
const liquityLeverageManagementSubProxyAbi = [{inputs:[{internalType: "uint64",name:"_repayBundleId",type:"uint64"},{internalType:"uint64",name:"_boostBundleId",type:"uint64"}],stateMutability:"nonpayable",type:"constructor"},{inputs:[{internalType:"uint256",name:"ratio",type:"uint256"},{internalType:"uint256",name:"targetRatio",type:"uint256"}],name:"RangeTooClose",type:"error"},{inputs:[{internalType:"uint256",name:"minRatio",type:"uint256"},{internalType:"uint256",name:"maxRatio",type:"uint256"}],name:"WrongSubParams",type:"error"},{inputs:[{internalType:"uint32",name:"_subId1",type:"uint32"},{internalType:"uint32",name:"_subId2",type:"uint32"}],name:"activateSub",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint32",name:"_subId1",type:"uint32"},{internalType:"uint32",name:"_subId2",type:"uint32"}],name:"deactivateSub",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"uint128",name:"minRatio",type:"uint128"},{internalType:"uint128",name:"maxRatio",type:"uint128"},{internalType:"uint128",name:"targetRatioBoost",type:"uint128"},{internalType:"uint128",name:"targetRatioRepay",type:"uint128"},{internalType:"bool",name:"boostEnabled",type:"bool"}],internalType:"struct LiquitySubProxy.LiquitySubData",name:"_subData",type:"tuple"}],name:"subToLiquityAutomation",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint32",name:"_subId1",type:"uint32"},{internalType:"uint32",name:"_subId2",type:"uint32"},{components:[{internalType:"uint128",name:"minRatio",type:"uint128"},{internalType:"uint128",name:"maxRatio",type:"uint128"},{internalType:"uint128",name:"targetRatioBoost",type:"uint128"},{internalType:"uint128",name:"targetRatioRepay",type:"uint128"},{internalType:"bool",name:"boostEnabled",type:"bool"}],internalType:"struct LiquitySubProxy.LiquitySubData",name:"_subData",type:"tuple"}],name:"updateSubData",outputs:[],stateMutability:"nonpayable",type:"function"}]

module.exports = {
    liquityViewAbi,
    liquityLeverageManagementSubProxyAbi
};
