const sparkViewAbi = [{ inputs: [], name: "SPARK_REFERRAL_CODE", outputs: [{ internalType: "uint16", name: "", type: "uint16" }], stateMutability: "view", type: "function" }, { inputs: [], name: "STABLE_ID", outputs: [{ internalType: "uint256", name: "", type: "uint256" }], stateMutability: "view", type: "function" }, { inputs: [], name: "VARIABLE_ID", outputs: [{ internalType: "uint256", name: "", type: "uint256" }], stateMutability: "view", type: "function" }, { inputs: [{ internalType: "address", name: "_market", type: "address" }, { internalType: "address", name: "_tokenAddr", type: "address" }], name: "getAssetPrice", outputs: [{ internalType: "uint256", name: "price", type: "uint256" }], stateMutability: "view", type: "function" }, { inputs: [{ internalType: "address", name: "_market", type: "address" }, { internalType: "address[]", name: "_tokens", type: "address[]" }], name: "getCollFactors", outputs: [{ internalType: "uint256[]", name: "collFactors", type: "uint256[]" }], stateMutability: "view", type: "function" }, { inputs: [{ internalType: "uint256", name: "emodeCategory", type: "uint256" }, { internalType: "contract IPoolV3", name: "lendingPool", type: "address" }], name: "getEModeCollateralFactor", outputs: [{ internalType: "uint16", name: "", type: "uint16" }], stateMutability: "view", type: "function" }, { inputs: [{ internalType: "address", name: "_market", type: "address" }, { internalType: "address[]", name: "_tokenAddresses", type: "address[]" }], name: "getFullTokensInfo", outputs: [{ components: [{ internalType: "address", name: "aTokenAddress", type: "address" }, { internalType: "address", name: "underlyingTokenAddress", type: "address" }, { internalType: "uint16", name: "assetId", type: "uint16" }, { internalType: "uint256", name: "supplyRate", type: "uint256" }, { internalType: "uint256", name: "borrowRateVariable", type: "uint256" }, { internalType: "uint256", name: "borrowRateStable", type: "uint256" }, { internalType: "uint256", name: "totalSupply", type: "uint256" }, { internalType: "uint256", name: "availableLiquidity", type: "uint256" }, { internalType: "uint256", name: "totalBorrow", type: "uint256" }, { internalType: "uint256", name: "totalBorrowVar", type: "uint256" }, { internalType: "uint256", name: "totalBorrowStab", type: "uint256" }, { internalType: "uint256", name: "collateralFactor", type: "uint256" }, { internalType: "uint256", name: "liquidationRatio", type: "uint256" }, { internalType: "uint256", name: "price", type: "uint256" }, { internalType: "uint256", name: "supplyCap", type: "uint256" }, { internalType: "uint256", name: "borrowCap", type: "uint256" }, { internalType: "uint256", name: "emodeCategory", type: "uint256" }, { internalType: "uint256", name: "debtCeilingForIsolationMode", type: "uint256" }, { internalType: "uint256", name: "isolationModeTotalDebt", type: "uint256" }, { internalType: "bool", name: "usageAsCollateralEnabled", type: "bool" }, { internalType: "bool", name: "borrowingEnabled", type: "bool" }, { internalType: "bool", name: "stableBorrowRateEnabled", type: "bool" }, { internalType: "bool", name: "isolationModeBorrowingEnabled", type: "bool" }, { internalType: "bool", name: "isSiloedForBorrowing", type: "bool" }, { internalType: "uint256", name: "eModeCollateralFactor", type: "uint256" }, { internalType: "bool", name: "isFlashLoanEnabled", type: "bool" }, { internalType: "uint16", name: "ltv", type: "uint16" }, { internalType: "uint16", name: "liquidationThreshold", type: "uint16" }, { internalType: "uint16", name: "liquidationBonus", type: "uint16" }, { internalType: "address", name: "priceSource", type: "address" }, { internalType: "string", name: "label", type: "string" }], internalType: "struct AaveV3View.TokenInfoFull[]", name: "tokens", type: "tuple[]" }], stateMutability: "view", type: "function" }, { inputs: [{ internalType: "address", name: "_market", type: "address" }, { internalType: "address", name: "_user", type: "address" }], name: "getHealthFactor", outputs: [{ internalType: "uint256", name: "healthFactor", type: "uint256" }], stateMutability: "view", type: "function" }, { inputs: [{ internalType: "address", name: "_market", type: "address" }, { internalType: "address", name: "_user", type: "address" }], name: "getLoanData", outputs: [{ components: [{ internalType: "address", name: "user", type: "address" }, { internalType: "uint128", name: "ratio", type: "uint128" }, { internalType: "uint256", name: "eMode", type: "uint256" }, { internalType: "address[]", name: "collAddr", type: "address[]" }, { internalType: "address[]", name: "borrowAddr", type: "address[]" }, { internalType: "uint256[]", name: "collAmounts", type: "uint256[]" }, { internalType: "uint256[]", name: "borrowStableAmounts", type: "uint256[]" }, { internalType: "uint256[]", name: "borrowVariableAmounts", type: "uint256[]" }, { internalType: "uint16", name: "ltv", type: "uint16" }, { internalType: "uint16", name: "liquidationThreshold", type: "uint16" }, { internalType: "uint16", name: "liquidationBonus", type: "uint16" }, { internalType: "address", name: "priceSource", type: "address" }, { internalType: "string", name: "label", type: "string" }], internalType: "struct AaveV3View.LoanData", name: "data", type: "tuple" }], stateMutability: "view", type: "function" }, { inputs: [{ internalType: "address", name: "_market", type: "address" }, { internalType: "address[]", name: "_users", type: "address[]" }], name: "getLoanDataArr", outputs: [{ components: [{ internalType: "address", name: "user", type: "address" }, { internalType: "uint128", name: "ratio", type: "uint128" }, { internalType: "uint256", name: "eMode", type: "uint256" }, { internalType: "address[]", name: "collAddr", type: "address[]" }, { internalType: "address[]", name: "borrowAddr", type: "address[]" }, { internalType: "uint256[]", name: "collAmounts", type: "uint256[]" }, { internalType: "uint256[]", name: "borrowStableAmounts", type: "uint256[]" }, { internalType: "uint256[]", name: "borrowVariableAmounts", type: "uint256[]" }, { internalType: "uint16", name: "ltv", type: "uint16" }, { internalType: "uint16", name: "liquidationThreshold", type: "uint16" }, { internalType: "uint16", name: "liquidationBonus", type: "uint16" }, { internalType: "address", name: "priceSource", type: "address" }, { internalType: "string", name: "label", type: "string" }], internalType: "struct AaveV3View.LoanData[]", name: "loans", type: "tuple[]" }], stateMutability: "view", type: "function" }, { inputs: [{ components: [{ internalType: "uint256", name: "data", type: "uint256" }], internalType: "struct DataTypes.ReserveConfigurationMap", name: "self", type: "tuple" }], name: "getLtv", outputs: [{ internalType: "uint256", name: "", type: "uint256" }], stateMutability: "pure", type: "function" }, { inputs: [{ internalType: "address", name: "_market", type: "address" }, { internalType: "address[]", name: "_tokens", type: "address[]" }], name: "getPrices", outputs: [{ internalType: "uint256[]", name: "prices", type: "uint256[]" }], stateMutability: "view", type: "function" }, { inputs: [{ internalType: "address", name: "_market", type: "address" }, { internalType: "address", name: "_user", type: "address" }], name: "getRatio", outputs: [{ internalType: "uint256", name: "", type: "uint256" }], stateMutability: "view", type: "function" }, { inputs: [{ internalType: "address", name: "_market", type: "address" }, { internalType: "address[]", name: "_users", type: "address[]" }], name: "getRatios", outputs: [{ internalType: "uint256[]", name: "ratios", type: "uint256[]" }], stateMutability: "view", type: "function" }, { inputs: [{ internalType: "address", name: "_market", type: "address" }, { internalType: "address", name: "_user", type: "address" }], name: "getSafetyRatio", outputs: [{ internalType: "uint256", name: "", type: "uint256" }], stateMutability: "view", type: "function" }, { inputs: [{ internalType: "address", name: "_market", type: "address" }, { internalType: "address", name: "_user", type: "address" }, { internalType: "address[]", name: "_tokens", type: "address[]" }], name: "getTokenBalances", outputs: [{ components: [{ internalType: "address", name: "token", type: "address" }, { internalType: "uint256", name: "balance", type: "uint256" }, { internalType: "uint256", name: "borrowsStable", type: "uint256" }, { internalType: "uint256", name: "borrowsVariable", type: "uint256" }, { internalType: "uint256", name: "stableBorrowRate", type: "uint256" }, { internalType: "bool", name: "enabledAsCollateral", type: "bool" }], internalType: "struct AaveV3View.UserToken[]", name: "userTokens", type: "tuple[]" }], stateMutability: "view", type: "function" }, { inputs: [{ internalType: "address", name: "_market", type: "address" }, { internalType: "address", name: "_tokenAddr", type: "address" }], name: "getTokenInfoFull", outputs: [{ components: [{ internalType: "address", name: "aTokenAddress", type: "address" }, { internalType: "address", name: "underlyingTokenAddress", type: "address" }, { internalType: "uint16", name: "assetId", type: "uint16" }, { internalType: "uint256", name: "supplyRate", type: "uint256" }, { internalType: "uint256", name: "borrowRateVariable", type: "uint256" }, { internalType: "uint256", name: "borrowRateStable", type: "uint256" }, { internalType: "uint256", name: "totalSupply", type: "uint256" }, { internalType: "uint256", name: "availableLiquidity", type: "uint256" }, { internalType: "uint256", name: "totalBorrow", type: "uint256" }, { internalType: "uint256", name: "totalBorrowVar", type: "uint256" }, { internalType: "uint256", name: "totalBorrowStab", type: "uint256" }, { internalType: "uint256", name: "collateralFactor", type: "uint256" }, { internalType: "uint256", name: "liquidationRatio", type: "uint256" }, { internalType: "uint256", name: "price", type: "uint256" }, { internalType: "uint256", name: "supplyCap", type: "uint256" }, { internalType: "uint256", name: "borrowCap", type: "uint256" }, { internalType: "uint256", name: "emodeCategory", type: "uint256" }, { internalType: "uint256", name: "debtCeilingForIsolationMode", type: "uint256" }, { internalType: "uint256", name: "isolationModeTotalDebt", type: "uint256" }, { internalType: "bool", name: "usageAsCollateralEnabled", type: "bool" }, { internalType: "bool", name: "borrowingEnabled", type: "bool" }, { internalType: "bool", name: "stableBorrowRateEnabled", type: "bool" }, { internalType: "bool", name: "isolationModeBorrowingEnabled", type: "bool" }, { internalType: "bool", name: "isSiloedForBorrowing", type: "bool" }, { internalType: "uint256", name: "eModeCollateralFactor", type: "uint256" }, { internalType: "bool", name: "isFlashLoanEnabled", type: "bool" }, { internalType: "uint16", name: "ltv", type: "uint16" }, { internalType: "uint16", name: "liquidationThreshold", type: "uint16" }, { internalType: "uint16", name: "liquidationBonus", type: "uint16" }, { internalType: "address", name: "priceSource", type: "address" }, { internalType: "string", name: "label", type: "string" }], internalType: "struct AaveV3View.TokenInfoFull", name: "_tokenInfo", type: "tuple" }], stateMutability: "view", type: "function" }, { inputs: [{ internalType: "address", name: "_market", type: "address" }, { internalType: "address[]", name: "_tokenAddresses", type: "address[]" }], name: "getTokensInfo", outputs: [{ components: [{ internalType: "address", name: "aTokenAddress", type: "address" }, { internalType: "address", name: "underlyingTokenAddress", type: "address" }, { internalType: "uint256", name: "collateralFactor", type: "uint256" }, { internalType: "uint256", name: "price", type: "uint256" }], internalType: "struct AaveV3View.TokenInfo[]", name: "tokens", type: "tuple[]" }], stateMutability: "view", type: "function" }];

module.exports = {
    sparkViewAbi
};
